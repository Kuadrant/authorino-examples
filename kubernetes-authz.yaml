apiVersion: authorino.3scale.net/v1beta1
kind: AuthConfig
metadata:
  name: talker-api-protection
spec:
  hosts:
  - talker-api-authorino.127.0.0.1.nip.io
  identity:
  - name: service-accounts
    kubernetes:
      audiences:
      - talker-api
    extendedProperties:
    - name: username
      valueFrom:
        authJSON: auth.identity.sub
  - name: api-key-users
    apiKey:
      labelSelectors:
        audiences: talker-api
    extendedProperties:
    - name: username
      valueFrom:
        authJSON: auth.identity.metadata.annotations.username
    credentials:
      in: authorization_header
      keySelector: APIKEY
  authorization:
  - name: non-resource-endpoints
    kubernetes:
      conditions:
      - selector: context.request.http.path.@extract:{"sep":"/","pos":1}
        operator: neq
        value: resources
      user:
        valueFrom:
          authJSON: auth.identity.username
  - name: resource-endpoints
    kubernetes:
      conditions:
      - selector: context.request.http.path
        operator: matches
        value: ^/resources(/\w+)?
      user:
        valueFrom:
          authJSON: auth.identity.username
      resourceAttributes:
        namespace:
          value: authorino
        group:
          value: talker-api.authorino.3scale.net
        resource:
          value: resources
        name:
          valueFrom:
            authJSON: context.request.http.path.@extract:{"sep":"/","pos":2}
        verb:
          valueFrom:
            authJSON: context.request.http.method.@case:lower
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-consumer-1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-consumer-2
---
apiVersion: v1
kind: Secret
metadata:
  name: api-key-1
  labels:
    authorino.3scale.net/managed-by: authorino
    audiences: talker-api
  annotations:
    username: john
stringData:
  api_key: ndyBzreUzF4zqDQsqSPMHkRhriEOtcRx
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: api-key-2
  labels:
    authorino.3scale.net/managed-by: authorino
    audiences: talker-api
  annotations:
    username: jane
stringData:
  api_key: Vb8Ymt1Y2hWvaKcAcElau81ia2CsAYUn
type: Opaque
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: talker-api-greeter
rules:
- nonResourceURLs: ["/hello"]
  verbs: ["post"]
- nonResourceURLs: ["/hey"]
  verbs: ["post"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: talker-api-speaker
rules:
- nonResourceURLs: ["/say/*"]
  verbs: ["post"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: talker-api-resource-reader
rules:
- apiGroups: ["talker-api.authorino.3scale.net"]
  resources: ["resources"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: talker-api-greeter-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: talker-api-greeter
subjects:
- kind: ServiceAccount
  name: api-consumer-1
  namespace: authorino
- kind: ServiceAccount
  name: api-consumer-2
  namespace: authorino
- kind: User
  name: john
- kind: User
  name: jane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: talker-api-speaker-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: talker-api-speaker
subjects:
- kind: ServiceAccount
  name: api-consumer-1
  namespace: authorino
- kind: User
  name: john
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: talker-api-resource-reader-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: talker-api-resource-reader
subjects:
- kind: ServiceAccount
  name: api-consumer-1
  namespace: authorino
- kind: User
  name: john
  namespace: authorino
