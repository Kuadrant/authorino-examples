#!/bin/bash

INTERVAL="10"
METHOD="GET"
HEADERS=()
CREDENTIALS_IN="authorization_header"
CREDENTIALS_KEY="Bearer"

while [[ $# -gt 0 ]]; do
  key=${1%=*}
  val=${1#*=}

  case $key in
    --endpoint )
      ENDPOINT="$val"
      ;;
    --method )
      METHOD="$val"
      ;;
    --header )
      HEADERS+=("$val")
      ;;
    --token )
      TOKEN="$val"
      ;;
    --token-path )
      TOKEN=$(cat "$val")
      ;;
    --credentials-in )
      CREDENTIALS_IN="$val"
      ;;
    --credentials-key )
      CREDENTIALS_KEY="$val"
      ;;
    --insecure )
      INSECURE="--insecure"
      ;;
    --interval )
      INTERVAL="$val"
      ;;
    --debug )
      DEBUG="true"
      ;;
    * )
      ;;
  esac

  shift
done

if [ "$CREDENTIALS_IN" == "authorization_header" ]; then
  HEADERS+=("Authorization: $CREDENTIALS_KEY $TOKEN")
elif [ "$CREDENTIALS_IN" == "custom_header" ]; then
  HEADERS+=("${CREDENTIALS_KEY}: $TOKEN")
elif [ "$CREDENTIALS_IN" == "cookie" ]; then
  HEADERS+=("Cookie: $CREDENTIALS_KEY=$TOKEN")
elif [ "$CREDENTIALS_IN" == "query" ]; then
  ENDPOINT="$ENDPOINT?$CREDENTIALS_KEY=$TOKEN"
fi

if [ "$DEBUG" != "true" ]; then
  curl_cmd="curl -s -o /dev/null -w \"%{http_code}\" "
else
  curl_cmd="curl -v "
fi

if [[ "$METHOD" != "GET" ]]; then
  curl_cmd+="-X $METHOD "
fi

for h in "${HEADERS[@]}"
do
  curl_cmd+="-H \"$h\" "
done

curl_cmd+="$INSECURE \"$ENDPOINT\""

if [ "$DEBUG" == "true" ]; then
  echo "Command: $curl_cmd"
  echo "Interval: $INTERVAL"
  echo ""
fi

echo "Sending..."

while true; do
  eval $curl_cmd
  echo ""
  if [ "$INTERVAL" == "0" ]; then
    exit 0
  fi
  sleep $INTERVAL
done
